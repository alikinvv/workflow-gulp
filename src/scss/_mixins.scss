// set media width
@mixin r($width) {
  @media only screen and (max-width: $width + "px") {
    @content
  }
}

@mixin rmin($width) {
  @media only screen and (min-width: $width + "px") {
    @content
  }
}

@mixin flexlist($margin) {
  display: flex;
  flex-wrap: wrap;
  margin: 0 ($margin / 2 * -1) ($margin * -1);
  margin-top: 0;
}

@mixin flexitem($width, $margin) {
  width: calc(#{$width} - #{$margin});
  margin: 0 ($margin / 2) $margin;
}

// set cover
@mixin cover {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

// centering
@mixin centerX {
  position: relative;
  left: 50%;
  transform: translateX(-50%);
}

@mixin centerY {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

@mixin centerXa {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@mixin centerYa {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff ttf svg) {
  $src: null;

  $extmods: (
    eot: "?",
    svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
    otf: "opentype",
    ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}